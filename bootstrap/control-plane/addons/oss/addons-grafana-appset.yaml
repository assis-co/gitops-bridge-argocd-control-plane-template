---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: addons-grafana
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
    - merge:
        mergeKeys: [server]
        generators:
          - clusters:
              values:
                addonChart: grafana
                # anything not staging or prod use this version
                addonChartVersion: 8.5.12
                addonChartRepository: https://grafana.github.io/helm-charts
              selector:
                matchExpressions:
                  - key: akuity.io/argo-cd-cluster-name
                    operator: NotIn
                    values: [in-cluster]
                  - key: enable_grafana
                    operator: In
                    values: ['true']
          - clusters:
              selector:
                matchLabels:
                  environment: staging
              values:
                addonChartVersion: 8.5.12
          - clusters:
              selector:
                matchLabels:
                  environment: prod
              values:
                addonChartVersion: 8.5.12
  template:
    metadata:
      name: addon-{{name}}-{{values.addonChart}}
    spec:
      project: default
      sources:
        - repoURL: '{{metadata.annotations.addons_repo_url}}'
          targetRevision: '{{metadata.annotations.addons_repo_revision}}'
          ref: values
        - chart: '{{values.addonChart}}'
          repoURL: '{{values.addonChartRepository}}'
          targetRevision: '{{values.addonChartVersion}}'
          helm:
            releaseName: '{{values.addonChart}}'
            ignoreMissingValueFiles: true
            valueFiles:
              - $values/{{metadata.annotations.addons_repo_basepath}}environments/default/addons/{{values.addonChart}}/values.yaml
              - $values/{{metadata.annotations.addons_repo_basepath}}environments/{{metadata.labels.environment}}/addons/{{values.addonChart}}/values.yaml
              - $values/{{metadata.annotations.addons_repo_basepath}}clusters/{{name}}/addons/{{values.addonChart}}/values.yaml
            values: |
              ingress:
                enabled: true                
                ingressClassName: "alb"
                annotations:
                  alb.ingress.kubernetes.io/scheme: "internal"           
                  kubernetes.io/ingress.class: "alb"       
                  alb.ingress.kubernetes.io/target-type: "ip"
                  alb.ingress.kubernetes.io/backend-protocol: "HTTP"
                  alb.ingress.kubernetes.io/healthcheck-path: "/login"  # Path that returns 200 OK
                  alb.ingress.kubernetes.io/healthcheck-port: "3000"
                  alb.ingress.kubernetes.io/listen-ports: "[{\"HTTP\":80},{\"HTTPS\":443}]"
                  alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=300
                  alb.ingress.kubernetes.io/target-group-attributes: load_balancing.algorithm.type=least_outstanding_requests
                  alb.ingress.kubernetes.io/certificate-arn: {{metadata.annotations.grafana_certificate}}
                  external-dns.alpha.kubernetes.io/hostname: {{metadata.annotations.grafana_domain}}
                  alb.ingress.kubernetes.io/ssl-redirect: "443"
                  alb.ingress.kubernetes.io/tags: "Environment=hub,GitOps=true"
                  alb.ingress.kubernetes.io/load-balancer-name: grafana-lb
                  alb.ingress.kubernetes.io/group.name: {{metadata.annotations.grafana_domain}}
                hosts:
                  - {{metadata.annotations.grafana_domain}}     
                path: /            
                grafana.ini:
                  server:
                    domain: {{metadata.annotations.grafana_domain}}
                    serve_from_sub_path: true                     
      destination:
        namespace: 'monitoring'
        name: '{{name}}'
      syncPolicy:
        automated:
          prune: false
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true  # Big CRDs.